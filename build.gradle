plugins {
	id 'java-library'
	id 'idea'
	id 'maven-publish'
	id 'fabric-loom' version '1.2.7' apply false
}

version = project.version
logger.lifecycle("Building the project.")

allprojects {
	group = "net.theelm.sewingmachine"
	
	apply plugin: 'java-library'
	apply plugin: 'fabric-loom'
	
	tasks.withType(JavaCompile).configureEach {
		it.options.release = 17
	}
	
	java {
		// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
		// if it is present.
		// If you remove this line, sources will not be generated.
		withSourcesJar()
	}
	
	sourceSets {

	}

	allprojects.each { p ->
		loom.mods.register(p.name) {
			sourceSet p.sourceSets.main
			//sourceSet p.sourceSets.client
		}
	}
	
	dependencies {
		//to change the versions see the gradle.properties file
		minecraft "com.mojang:minecraft:${project.minecraft_version}"
		mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
		modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
		
		// Fabric API. Used for commands
		modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
		
		implementation 'com.intellij:annotations:+@jar'
		
		logger.info(project.name)
		if (project.name != "sewingmachine-base") {
			implementation project(':sewingmachine-base')
		}
		
		/*shadow group: 'org.xerial', name: 'sqlite-jdbc', version: '3.28.0'
		shadow group: 'mysql', name: 'mysql-connector-java', version: '8.0.15'
		shadow group: 'com.github.BlueMap-Minecraft', name: 'BlueMapAPI', version: 'v1.7.0'*/
	}
	
	tasks.withType(ProcessResources).configureEach {
		inputs.property "version", project.version
		
		filesMatching("fabric.mod.json") {
			expand "version": project.version
		}
	}
	
	tasks.withType(AbstractArchiveTask).configureEach {
		preserveFileTimestamps = false
		reproducibleFileOrder = true
	}
	
	tasks.register('generateSources') {
		group = "fabric"
	}
}